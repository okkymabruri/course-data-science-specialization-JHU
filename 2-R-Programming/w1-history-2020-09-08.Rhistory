z<-airquality
sum(z$Month = 5)
z<-airquality
sum(z$Month = 5)
sum(z$Month)
sum(z$Month != 5)
sum(z$Month = 5)
sum(z$Month == 5)
mean(is.na(z))
mean(is.na(z$Ozone))
mean(!is.na(z$Ozone))
View(airquality)
airquality
View(z)
x == 4
x = 4
class(x)
x <- c(4, "a", TRUE)
clear
#4
x = 4
class(x)
#5
x <- c(4, "a", TRUE)
#6
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
#8
x <- list(2, "a", "b", TRUE)
x[[2]]
#9
x <- 1:4
y <- 2:3
x + y
#10
x <- c(17, 14, 4, 5, 13, 12, 10)
x [x > 10] == 4
airquality
head(airquality)
#
colSums(airquality)
#
countSums(airquality)
#
count(airquality)
#
tail(airquality)
#See total row
tail(airquality)
#see row 47
row(47, airquality)
#see row 47
airquality[47]
#see row 47
airquality[47:47]
#see row 47
airquality[47:47, 1]
#see row 47
airquality[47:47, 2]
#see row 47
airquality[47, 2]
#see row 47
airquality[47, 1:]
#see row 47
airquality
airquality[152, 1]
airquality[152, 1:5]
airquality[152, 1:7]
airquality[47, 1:5]
#sum na values
sum(is.na(airquality$Ozone)))
#sum na values
sum(is.na(airquality$Ozone))
mean(airquality$Ozone, na.rm=TRUE)
mean(airquality$Ozone, na.rm=0)
mean(airquality$Ozone, na.rm=1)
airquality$Ozone > 50
print(airquality$Ozone > 50)
airquality$Ozone > 50
#subset of rows of the data frame where Ozone values are above 31
subset(airquality$Ozone < 31)
subset(airquality, airquality$Ozone < 31)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90)
mean(z$Solar.R, na.rm = 1)
mean(z$Solar.R, na.rm = 0)
mean(z$Solar.R)
z
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90)
z
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- print(subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90))
z
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 & airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 && airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 && airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
subset(airquality, airquality$Ozone < 31 && airquality$Temp > 90)
z <- print(subset(airquality, airquality$Ozone > 31 & airquality$Temp > 90))
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- subset(airquality, airquality$Ozone < 31 && airquality$Temp > 90)
mean(z$Solar.R)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- subset(airquality, airquality$Ozone < 31 && airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- print(subset(airquality, airquality$Ozone > 31 & airquality$Temp > 90))
mean(z$Solar.R)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- subset(airquality, airquality$Ozone > 31 & airquality$Temp > 90)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- print(subset(airquality, airquality$Ozone > 31 & airquality$Temp > 90))
mean(z$Solar.R)
#mean of Temp when month is equal to 6
z <- print(subset(airquality, airquality$Month == 6))
mean(z$Temp)
#max of ozone when month is equal to 6
z <- print(subset(airquality, airquality$Month == 5))
max(z$Ozone)
max(z$Ozone,na.rm = 1)
#4
x = 4L
class(x)
#5
x <- c(4, "a", TRUE)
x [x == 4] > 10
#10
x <- c(17, 14, 4, 5, 13, 12, 10)
x [x > 10] <- 4
#see header name
head(airquality)
#see total row
tail(airquality)
#see row 47
airquality[47, 1:5]
#sum na values
sum(is.na(airquality$Ozone))
#mean without na values
mean(airquality$Ozone, na.rm=1)
#subset of rows of the data frame where Ozone values are above 31 and Temp values are above 90
z <- print(subset(airquality, airquality$Ozone > 31 & airquality$Temp > 90))
mean(z$Solar.R)
#mean of Temp when month is equal to 6
z <- print(subset(airquality, airquality$Month == 6))
mean(z$Temp)
#max of ozone when month is equal to 6
z <- print(subset(airquality, airquality$Month == 5))
max(z$Ozone,na.rm = 1)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install.packages("swirl") #install swirl
install.packages("swirl")
packageVersion("swirl") #check package version
install_from_swirl("R Programming") #install R programming course
library(swirl) #import swirl package
install_from_swirl("R Programming") #install R programming course
swirl() #stat swirl
swirl() #stat swirl
library(swirl) #import swirl package
swirl() #stat swirl
my_char <- c('My', 'name', 'is')
my_char
paste(my_char, collapse = ' ')
my_name <- c(my_char, 'Okky Mabruri')
my_name
paste(my_char, collapse = ' ')
paste(my_name, collapse = ' ')
paste('Hello', 'world!', sep = ' ')
paste(1:3, c('X', 'Y', 'Z'), sep = ' ')
paste(1:3, c('X', 'Y', 'Z'), sep = '')
paste(LETTERS, 1:4, sep = '-')
x <- c(44,NA,5,NA)
x *3
y <- rnorm(1000)
?rep
z <- rep(NA, 1000)
my_data <- sample(c(x,y),100)
my_data
my_data <- sample(c(y,z),100)
my_data
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf
Inf- Inf
x
x[1:10]
x[is.na(x)]
is.na(x)
x[is.na(x)]
y <- x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar = 2, norf = NA)
vect
name(vect)
names(vect)
vect2 <- c(11,2,NA)
vect2 <- c('foo', 'bar', 'norf')
names(vect2) <- c('foo', 'bar', 'norf')
?identical
identical(vect, vect2)
vect['bar']
vect[c('foo', 'bar']
vect[c('foo', 'bar')]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix,my_matrix2)
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
?cbind
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c('patient','age','weight','bp','rating','test')
?colnames
colnames(cnames)
View(my_data)
View(my_data)
colnames(my_data) <- cnames
View(my_data)
View(my_data)
my_data
savehistory("/mnt/sdb2/OneDrive/Who-Am-I/Data Science-AI/course-data-science-specialization-JHU/2-R-Programming/history2020-09-08.Rhistory")
